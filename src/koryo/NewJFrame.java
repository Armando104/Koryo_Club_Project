/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package koryo;

import java.awt.Image;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author ARMAND
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }
    JFileChooser fc = new JFileChooser();
    int len = 0;
    File f = null;
    String gg = null;
    String path = null;
    String grad = "";
    Date dd = null;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fname = new javax.swing.JTextField();
        dob = new javax.swing.JTextField();
        lname = new javax.swing.JTextField();
        picture = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        fnamemsg = new javax.swing.JLabel();
        lnamemsg = new javax.swing.JLabel();
        dobmsg = new javax.swing.JLabel();
        showImage = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        idhidden = new javax.swing.JLabel();
        grade = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        PlayerTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        pfoto = new javax.swing.JLabel();
        pname = new javax.swing.JLabel();
        page = new javax.swing.JLabel();
        pgrade = new javax.swing.JLabel();
        pid = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        Sorting = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        topay = new javax.swing.JTextField();
        paid = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        itariki1 = new com.toedter.calendar.JDateChooser();
        services = new javax.swing.JComboBox();
        cat = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        ukwezi = new com.toedter.calendar.JMonthChooser();
        umwaka = new com.toedter.calendar.JYearChooser();
        jButton6 = new javax.swing.JButton();
        piderror = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        paymentTable = new javax.swing.JTable();
        playerCombo = new javax.swing.JComboBox();
        check_amt = new javax.swing.JButton();
        paiderror = new javax.swing.JLabel();
        topay_error = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        jMenu1.setText("jMenu1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 51, 51));

        jTabbedPane1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("PLAYER REGISTRATION FORM");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("FIRST NAME:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("LAST NAME:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("DATE OF BIRTH:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("GRADE:");

        jButton1.setBackground(new java.awt.Color(0, 204, 51));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("REGISTER");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/koryo/Koryo.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");

        jButton2.setText("Choose Image");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        fnamemsg.setForeground(new java.awt.Color(255, 0, 0));

        lnamemsg.setForeground(new java.awt.Color(255, 0, 0));

        dobmsg.setForeground(new java.awt.Color(255, 0, 0));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/koryo/flag.png"))); // NOI18N

        jButton5.setBackground(new java.awt.Color(51, 51, 255));
        jButton5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("UPDATE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        grade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SELECT GRADE", "WHITE BELT", "YELLOW BELT", "BLUE BELT", "RED BELT", "BLACK BELT", "1st DAN", "2nd DAN", "3rd DAN" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(49, 49, 49)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dobmsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fname)
                            .addComponent(dob)
                            .addComponent(lname)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(fnamemsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lnamemsg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(grade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(picture)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(124, 124, 124)
                        .addComponent(idhidden)))
                .addGap(89, 89, 89)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(showImage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(256, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(idhidden))
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(fname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fnamemsg)
                        .addGap(20, 20, 20)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lnamemsg)
                        .addGap(11, 11, 11)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dob, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(dobmsg)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(grade, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(picture, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(showImage, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );

        jScrollPane2.setViewportView(jPanel1);

        jTabbedPane1.addTab("REGISTER", jScrollPane2);

        jPanel2.setBackground(new java.awt.Color(51, 102, 255));

        PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
            getPlayers(),
            new String [] {
                "ID", "NAMES", "DATE OF BIRTH", "REGISTER DATE"
            }
        ));
        PlayerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PlayerTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(PlayerTable);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("PLAYER'S  RECORD");

        pname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pname.setForeground(new java.awt.Color(255, 255, 255));

        page.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        page.setForeground(new java.awt.Color(255, 255, 255));

        pgrade.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pgrade.setForeground(new java.awt.Color(255, 255, 255));

        pid.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        pid.setForeground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));

        jButton4.setBackground(new java.awt.Color(255, 0, 51));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("DELETE");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("CLICK ON A PLAYER TO VIEW RECORD");

        Sorting.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        Sorting.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SORT BY", "ID", "DOB", "Item 4" }));
        Sorting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel9))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(186, 186, 186))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 219, Short.MAX_VALUE)
                                .addComponent(page, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(pgrade, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(pname, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(pfoto, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pid, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(237, 237, 237)
                        .addComponent(Sorting, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(4, 4, 4)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(pname)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pfoto, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(page)
                            .addComponent(jLabel10))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pgrade)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pid)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(Sorting))
                .addGap(65, 65, 65))
        );

        jScrollPane3.setViewportView(jPanel2);

        jTabbedPane1.addTab("RECORDS", jScrollPane3);

        jPanel3.setBackground(new java.awt.Color(0, 153, 204));

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel12.setText("PAYMENT FORM");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("PLAYER ID:");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel14.setText("SERVICE CATEGORY:");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel15.setText("AMOUNT PAID:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel16.setText("AMOUNT TO PAY:");

        topay.setEditable(false);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("SAVE");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel17.setText("SELECT SERVICE:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel18.setText("DATE OF PAYMENT:");

        services.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        services.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--SELECT HERE---", "INSCRIPTION", "COTISATION MENSUELLE", "IKIBINA(SOCIETE)", "DOBOK", "DONS ET AIDES" }));

        cat.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cat.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FONCTIONNAIRE", "GRAND", "PETITS" }));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel19.setText("PAYMENT MONTH:");

        jButton6.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton6.setText("UPDATE");

        piderror.setForeground(new java.awt.Color(255, 51, 0));

        paymentTable.setModel(new javax.swing.table.DefaultTableModel(
            Payment.PaymentView(),
            new String [] {
                "ID", "NAMES", "AMT TO PAY", "AMT PAID", "BALANCE", "REC_DATE","SERVICE"
            }
        ));
        jScrollPane5.setViewportView(paymentTable);

        playerCombo.setModel(new javax.swing.DefaultComboBoxModel(Player.getPlayerList1().toArray()));
        playerCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playerComboActionPerformed(evt);
            }
        });

        check_amt.setText("check amount to pay");
        check_amt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                check_amtActionPerformed(evt);
            }
        });

        paiderror.setForeground(new java.awt.Color(255, 51, 51));

        topay_error.setForeground(new java.awt.Color(255, 51, 51));

        jLabel20.setText("RWF");

        jLabel21.setText("RWF");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel14)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel19))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(ukwezi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(umwaka, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                                            .addComponent(cat, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(10, 10, 10)
                                                .addComponent(piderror, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(playerCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel15)
                                            .addComponent(jLabel18))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(paiderror, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(paid, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton6)
                                                .addGap(10, 10, 10))
                                            .addComponent(itariki1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(topay_error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(topay, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel21))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(check_amt)
                                .addGap(86, 86, 86)))
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 667, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(151, 151, 151)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel17)
                        .addGap(38, 38, 38)
                        .addComponent(services, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(services, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel13))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(playerCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(piderror)
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cat, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ukwezi, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(umwaka, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addComponent(topay_error)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(topay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(check_amt)
                        .addGap(5, 5, 5)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(paid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel21))
                                .addGap(13, 13, 13)
                                .addComponent(paiderror)
                                .addGap(18, 18, 18)
                                .addComponent(itariki1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel3);

        jTabbedPane1.addTab("PAYMENTS", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1102, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        fc = new JFileChooser();
        gg = fc.showOpenDialog(this) + "";
        File f = fc.getSelectedFile();
        path = f.getAbsolutePath();
        showImage.setIcon(new ImageIcon(path));
        picture.setText(path);
        try {
            FileInputStream fin = new FileInputStream(f);
            len = (int) f.length();
        } catch (Exception e) {
            System.out.println(e);
            //JOptionPane.showMessageDialog(rootPane, e, "ERROR",JOptionPane.ERROR_MESSAGE);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        boolean v = true;
        Player pl = new Player();
        String firstname = fname.getText();
        if (firstname.length() == 0) {
            fnamemsg.setText("Empty Field Not Allowed Here!");
            v = false;
        } else {
            fname.setText("");
        }
        String lastname = lname.getText();
        if (lastname.length() == 0) {
            lnamemsg.setText("Empty Field Not Allowed Here!");
            v = false;
        } else {
            lnamemsg.setText("");
        }
        String date_of_birth = dob.getText();
        Date d = null;
        dd = new Date();
        try {
            SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
            d = df.parse(date_of_birth);
            if (d.after(dd)) {
                v = false;
                dobmsg.setText("USE A BEFORE TODAY DATE");
            }

        } catch (Exception e) {
            v = false;
            dobmsg.setText("INVALID FORMAT!!USE DD/MM/YYYY");
        }
        grad = grade.getSelectedItem() + "";
        //        fc= new JFileChooser();
        //         gg= fc.showOpenDialog(this)+"";
        File f = fc.getSelectedFile();
        path = f.getAbsolutePath();
        showImage.setIcon(new ImageIcon(path));
        picture.setText(path);
        try {
            FileInputStream fin = new FileInputStream(f);
            len = (int) f.length();
        } catch (Exception e) {
            System.out.println(e);
            //JOptionPane.showMessageDialog(rootPane, e, "ERROR",JOptionPane.ERROR_MESSAGE);
        }

        //File get=showImage.getIcon(new ImageIcon());
        if (v) {
            pl.setId(Player.getMaxID());
            pl.setFirstname(firstname);
            pl.setLastname(lastname);
            pl.setDob(d);
            pl.setGrade(grad);
            pl.setImage(f);
            pl.setCurrentDate(dd);
            pl.insert();
            PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
                    getPlayers(),
                    new String[]{
                "ID", "NAMES", "DATE OF BIRTH", "REGISTER DATE", "GRADE"
            }));
            File player = new File("D:\\KORYO FILES\\PLAYERS DATA\\" + firstname + " " + lastname);
            if (!player.exists()) {

                player.mkdirs();
            } else {
                v = false;
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
    String hh = "";
    String ss = "";
    String nam = "";
    String gr = "";
    FileInputStream is = null;
    private void PlayerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PlayerTableMouseClicked

        int n = PlayerTable.getSelectedRow();
        //pid.setText(PlayerTable.getValueAt(n,0)+"");
        hh = PlayerTable.getValueAt(n, 0) + "";
        idhidden.setText(hh);
        int id1 = Integer.parseInt(hh);
        nam = PlayerTable.getValueAt(n, 1) + "";
        pname.setText(PlayerTable.getValueAt(n, 1) + "");
        lname.setText(nam);
        ss = PlayerTable.getValueAt(n, 2) + "";
        picture.setText(path);
        String[] ar = ss.split("-");
        String age = ar[0];
        int age1 = Integer.parseInt(age);
        Date no = new Date();
        Calendar r = new GregorianCalendar();
        r.setTime(no);
        int age2 = r.get(Calendar.YEAR);
        int dif = age2 - age1;
        //        SimpleDateFormat df=new SimpleDateFormat("DD/MM/YYYY");
        //        Date tt=null;

        page.setText(dif + "");
        jLabel10.setText("AGE:");

        jLabel11.setText("GRADE:");
        try {
            byte[] imageBytes;
            Image image;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            PreparedStatement ps = con.prepareStatement("select * from player where id=?");
            ps.setInt(1, id1);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                imageBytes = rs.getBytes(6);
                image = getToolkit().createImage(imageBytes);
                pfoto.setIcon(new ImageIcon(image));
                gr = rs.getString(5);
                pgrade.setText(gr);
                grade.setToolTipText(gr);
                showImage.setIcon(new ImageIcon(image));
            }
        } catch (Exception e) {
        }
        String all = id1 + " " + nam + " " + ss + " " + gr;
        Date d = new Date();
        GregorianCalendar c = new GregorianCalendar();
        c.setTime(d);
        int a = c.get(Calendar.HOUR_OF_DAY) - 1;
        int month = c.get(Calendar.MONTH) + 1;
        File FilePlayer = new File("D:\\KORYO FILES\\PLAYERS DATA\\" + nam);
        if (FilePlayer.exists()) {
            File f1 = new File("D:\\KORYO FILES\\PLAYERS DATA\\" + nam + "\\" + " " + c.get(Calendar.YEAR) + "-" + month + "-" + c.get(Calendar.DATE) + "-" + c.get(Calendar.MINUTE) + ".txt");
            try {
                f1.createNewFile();
                PrintWriter pp = new PrintWriter(f1);
                pp.println(all);
                pp.flush();
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }


        } else {
            //FileP.createNewFile();
        }

        //        int i=0;
        //        while(i<im.size()){
        //        pfoto.setText(im.get(j));
        //    }
        // TODO add your handling code here:
    }//GEN-LAST:event_PlayerTableMouseClicked
//==========================================================================

    public static List<Player> getList() {
        List<Player> l = new ArrayList<Player>();
        try {
            byte[] imageBytes;
            Image image;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            PreparedStatement pst = con.prepareStatement("select * from player");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                Player pl = new Player();
                pl.setId(rs.getInt(1));
                pl.setFirstname(rs.getString(2));
                pl.setLastname(rs.getString(3));
                pl.setDob(rs.getDate(4));
                pl.setGrade(rs.getString(5));
                //imageBytes=rs.getBytes(6);

                // pl.setImage(imageBytes);
                l.add(pl);
            }

        } catch (Exception ex) {
            // return false;
        }
        return l;
    }
//===========================================================================

    public static List<Player> getListSortedByID() {
        List<Player> l = new ArrayList<Player>();
        try {
            byte[] imageBytes;
            Image image;
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            PreparedStatement pst = con.prepareStatement("select * from player ORDER BY ID DESC");
            ResultSet rs = pst.executeQuery();
            while (rs.next()) {
                Player pl = new Player();
                pl.setId(rs.getInt(1));
                pl.setFirstname(rs.getString(2));
                pl.setLastname(rs.getString(3));
                pl.setDob(rs.getDate(4));
                pl.setGrade(rs.getString(5));
                //imageBytes=rs.getBytes(6);

                // pl.setImage(imageBytes);
                l.add(pl);
            }

        } catch (Exception ex) {
            // return false;
        }
        return l;
    }
//==========================================================================
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        Player pl = new Player();
        int idd = Integer.parseInt(idhidden.getText());
        pl.setId(idd);
        pl.setGrade(grade.getSelectedItem() + "");
        File f = fc.getSelectedFile();
        path = f.getAbsolutePath();
        showImage.setIcon(new ImageIcon(path));
        picture.setText(path);
        try {
            FileInputStream fin = new FileInputStream(f);
            len = (int) f.length();
            pl.setImage(f);
        } catch (Exception e) {
            System.out.println(e);
            JOptionPane.showMessageDialog(rootPane, e, "ERROR", JOptionPane.ERROR_MESSAGE);
        }

        pl.update();

        PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
                getPlayers(),
                new String[]{
            "ID", "NAMES", "DATE OF BIRTH", "REGISTER DATE", "GRADE"
        }));
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        Player pp = new Player();
        int idd = Integer.parseInt(idhidden.getText());
        pp.setId(idd);
        pp.delete();
        JOptionPane.showMessageDialog(rootPane, "PLAYER DELETED SUCCESSFULLY!!");
        PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
                getPlayers(),
                new String[]{
            "ID", "NAMES", "DATE OF BIRTH", "REGISTER DATE", "GRADE"
        }));
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void SortingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortingActionPerformed

        String sort = (String) Sorting.getSelectedItem();
        if (sort.equalsIgnoreCase("ID")) {
            PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
                    getPlayersSortedByID(),
                    new String[]{
                "ID", "NAMES", "DATE OF BIRTH", "REGISTER DATE", "GRADE"
            }));
            if (sort.equalsIgnoreCase("NAMES")) {
                PlayerTable.setModel(new javax.swing.table.DefaultTableModel(
                        getPlayersSortedDATE_OF_BIRTH(),
                        new String[]{
                    "ID", "NAMES", "DATE OF BIRTH", "REGISTER DATE", "GRADE"
                }));
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_SortingActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            boolean v = true;
            Payment p = new Payment();
           // Player pl=new Player();           
            p.setId(Payment.getMaxID());
            String pname=playerCombo.getSelectedItem().toString();
            int a=Player.getPlayerName(pname).getId();
            p.setPlayerID(a);
            p.setService(services.getSelectedItem().toString());
            p.setServiceCategory(cat.getSelectedItem().toString());
            JComboBox j = (JComboBox) ukwezi.getComboBox();
            p.setPay(j.getSelectedItem().toString() + "-" + umwaka.getYear());
            p.setAmt_to_pay(Double.parseDouble(topay.getText()));
            p.setPaid(Double.parseDouble(paid.getText()));
            System.out.println(itariki1.getDate());
            p.setRecording_Date(itariki1.getDate());
            if (v) {
                if (p.insert()) {
                    JOptionPane.showMessageDialog(null, "Successfully Recorded");
                } else {
                    JOptionPane.showMessageDialog(null, "Not Recorded", "Sorry", JOptionPane.ERROR_MESSAGE);
                }
                paymentTable.setModel(new javax.swing.table.DefaultTableModel(
                        Payment.PaymentView(),
                        new String[]{
                    "ID", "PLAYER ID", "NAMES", "AMT TO PAY", "AMT PAID", "RECORDING DATE"
                }));
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        //}
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void playerComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playerComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_playerComboActionPerformed

    private void check_amtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_check_amtActionPerformed

        try {
            Payment p = new Payment();
            String service = services.getSelectedItem().toString();
            String serviceCat = cat.getSelectedItem().toString();
            if (service.contains("INSCRIPTION")) {
                if (serviceCat.contains("FONCTIONNAIRE")) {
                    topay.setText("2000");
                }

            }
        } catch (Exception e) {
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_check_amtActionPerformed
//================================================================================

//================================================================================    
    public Object[][] getPlayers() {
        Object[][] emps = new Object[100][5];
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM PLAYER";
            ResultSet rs = stmt.executeQuery(query);

            int i = 0;
            while (rs.next()) {
                emps[i][0] = rs.getInt(1);
                String firstname = rs.getString(2);
                String lastname = rs.getString(3);
                emps[i][1] = firstname + " " + lastname;
                emps[i][2] = rs.getDate(4);
                emps[i][3] = rs.getDate(7);
                emps[i][4] = rs.getString(5);
                //emps[i][4] = rs.getInt(5);
                i++;
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        return emps;
    }
    //===============================================================================

    public Object[][] getPlayersSortedByID() {
        Object[][] emps = new Object[100][5];
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM PLAYER ORDER BY ID DESC";
            ResultSet rs = stmt.executeQuery(query);

            int i = 0;
            while (rs.next()) {
                emps[i][0] = rs.getInt(1);
                String firstname = rs.getString(2);
                String lastname = rs.getString(3);
                emps[i][1] = firstname + " " + lastname;
                emps[i][2] = rs.getDate(4);
                emps[i][3] = rs.getDate(7);
                emps[i][4] = rs.getString(5);
                //emps[i][4] = rs.getInt(5);
                i++;
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        return emps;
    }
    //================================================================================ 

    public Object[][] getPlayersSortedDATE_OF_BIRTH() {
        Object[][] emps = new Object[100][5];
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM PLAYER ORDER BY dob DESC";
            ResultSet rs = stmt.executeQuery(query);

            int i = 0;
            while (rs.next()) {
                emps[i][0] = rs.getInt(1);
                String firstname = rs.getString(2);
                String lastname = rs.getString(3);
                emps[i][1] = firstname + " " + lastname;
                emps[i][2] = rs.getDate(4);
                emps[i][3] = rs.getDate(7);
                emps[i][4] = rs.getString(5);
                //emps[i][4] = rs.getInt(5);
                i++;
            }
            con.close();
        } catch (Exception e) {
            System.out.println(e);
        }
        return emps;
    }
    //===================================================================================    

    public static List<Player> getplayerImage(String pid) {
        List<Player> list = new ArrayList<Player>();
        //String status = "scheduled but unsold";
        //Auction au;
        int size = 0;
        byte[] bytearray = new byte[1048576];
        try {
            InputStream sImage;
            //DBconnection c = new DBconnection();
            //Connection con = c.open();
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM PLAYER WHERE id='" + pid + "'";
            ResultSet rs = stmt.executeQuery(query);

            File Picture;
            DataOutputStream out;

            while (rs.next()) {
                Player p = new Player();
                p.setId(rs.getInt(1));
                p.setFirstname(rs.getString(2));
                p.setLastname(rs.getString(3));
                p.setDob(rs.getDate(4));
                p.setGrade(rs.getString(5));
                sImage = rs.getBinaryStream(6);
                Picture = new File("D:\\PlayersPictures", p.getId() + ".jpg");
                out = new DataOutputStream(new FileOutputStream(Picture));
                while ((size = sImage.read(bytearray)) != -1) {
                    out.write(bytearray, 0, size);

                }
                p.setCurrentDate(rs.getDate(7));
//                au = Auction.getInfos(p.getProdID());
//                SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy,hh:mm");
//                Date auct = sdf.parse(au.getDatetime());
//                Date today = new Date();
//                long k = 2 * 60 * 60 * 1000;
//                long twohrbeforems = auct.getTime() - k;
//                long nownow = today.getTime();
//                if (twohrbeforems > nownow) {
//                    list.add(p);
//                }

            }
            rs.close();
            //ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();

        }
        //System.out.println("SIZE: >> "+list.size());

        return list;
    }
    //================================================================================

    public static List<Player> getplayer(String fname) {
        List<Player> list = new ArrayList<Player>();
        //String status = "scheduled but unsold";
        //Auction au;
        int size = 0;
        byte[] bytearray = new byte[1048576];
        try {
            InputStream sImage;
            //DBconnection c = new DBconnection();
            //Connection con = c.open();
            Class.forName("com.mysql.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/koryo", "root", "");
            Statement stmt = con.createStatement();
            String query = "SELECT * FROM PLAYER WHERE id='" + fname + "'";
            ResultSet rs = stmt.executeQuery(query);

            File Picture;
            DataOutputStream out;

            while (rs.next()) {
                Player p = new Player();
                p.setId(rs.getInt(1));
                p.setFirstname(rs.getString(2));
                p.setLastname(rs.getString(3));
                p.setDob(rs.getDate(4));
                p.setGrade(rs.getString(5));
                sImage = rs.getBinaryStream(6);
                Picture = new File("D:\\PlayersPictures", p.getId() + ".jpg");
                out = new DataOutputStream(new FileOutputStream(Picture));
                while ((size = sImage.read(bytearray)) != -1) {
                    out.write(bytearray, 0, size);

                }
                p.setCurrentDate(rs.getDate(7));
//                au = Auction.getInfos(p.getProdID());
//                SimpleDateFormat sdf = new SimpleDateFormat("MM/dd/yyyy,hh:mm");
//                Date auct = sdf.parse(au.getDatetime());
//                Date today = new Date();
//                long k = 2 * 60 * 60 * 1000;
//                long twohrbeforems = auct.getTime() - k;
//                long nownow = today.getTime();
//                if (twohrbeforems > nownow) {
//                    list.add(p);
//                }

            }
            rs.close();
            //ps.close();
            con.close();
        } catch (Exception e) {
            e.printStackTrace();

        }
        //System.out.println("SIZE: >> "+list.size());

        return list;
    }
    //===============================================================================

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PlayerTable;
    private javax.swing.JComboBox Sorting;
    private javax.swing.JComboBox cat;
    private javax.swing.JButton check_amt;
    private javax.swing.JTextField dob;
    private javax.swing.JLabel dobmsg;
    private javax.swing.JTextField fname;
    private javax.swing.JLabel fnamemsg;
    private javax.swing.JComboBox grade;
    private javax.swing.JLabel idhidden;
    private com.toedter.calendar.JDateChooser itariki1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lname;
    private javax.swing.JLabel lnamemsg;
    private javax.swing.JLabel page;
    private javax.swing.JTextField paid;
    private javax.swing.JLabel paiderror;
    private javax.swing.JTable paymentTable;
    private javax.swing.JLabel pfoto;
    private javax.swing.JLabel pgrade;
    private javax.swing.JTextField picture;
    private javax.swing.JLabel pid;
    private javax.swing.JLabel piderror;
    private javax.swing.JComboBox playerCombo;
    private javax.swing.JLabel pname;
    private javax.swing.JComboBox services;
    private javax.swing.JLabel showImage;
    private javax.swing.JTextField topay;
    private javax.swing.JLabel topay_error;
    private com.toedter.calendar.JMonthChooser ukwezi;
    private com.toedter.calendar.JYearChooser umwaka;
    // End of variables declaration//GEN-END:variables
}
